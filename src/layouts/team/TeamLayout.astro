---
import AppLayout from '@/layouts/AppLayout.astro'

import { Settings, Folder } from 'lucide-react'

import {
  Breadcrumb,
  BreadcrumbItem,
  BreadcrumbList,
  BreadcrumbSeparator,
} from '@/components/ui/breadcrumb'

import { TooltipComponent } from '@/components/tooltip-component'
import { BreadcrumbMenuComponent } from '@/components/breadcrumb-menu-component'
import { AvatarComponent } from '@/components/avatar-component'
import { getTeamsByUser } from '@/db/models/team'

import type { UserProps } from '@/components/avatar-component'
import type { ContentRowProps } from '@/components/breadcrumb-menu-component'
import type { TeamProps } from '@/pages/[teamSlug]/settings.astro'

interface Props {
  team: TeamProps
}

const slug = Astro.params.teamSlug
const { team } = Astro.props
const user = Astro.locals.user! as UserProps

const teams = (await getTeamsByUser({ userId: user.id })) || []
const teamRows: ContentRowProps[] = teams.map((team) => {
  return {
    text: `${team.name}`,
    url: `/${team.slug}`,
  }
})
const currentPath: string = new URL(Astro.request.url).pathname as string
---

<AppLayout>
  <Fragment slot="navLinks">
    <TooltipComponent client:idle currentPath={currentPath} text="Projects" url={`/${slug}`}>
      <Folder className="h-5 w-5" />
    </TooltipComponent>
    <TooltipComponent
      client:idle
      currentPath={currentPath}
      segments={2}
      nestedUrl={`/${slug}`}
      text="Team Settings"
      url={`/${slug}/settings`}
    >
      <Settings className="h-5 w-5" />
    </TooltipComponent>
  </Fragment>
  <Fragment slot="breadcrumbs">
    <Breadcrumb className="hidden md:flex">
      <BreadcrumbList>
        <BreadcrumbItem className="font-semibold tracking-tight text-foreground">
          <AvatarComponent className="h-6 w-6 text-xs" user={user} client:load />
          {team.name}
          <BreadcrumbMenuComponent
            client:idle
            title="Teams"
            btnCreateText="Create a Team"
            btnCreateUrl="/account/new-team"
            rows={teamRows}
            currentPath={currentPath}
          />
        </BreadcrumbItem>
        <BreadcrumbSeparator className="text-gray-300">
          <svg
            fill="none"
            height="16"
            shape-rendering="geometricPrecision"
            stroke="currentColor"
            stroke-linecap="round"
            stroke-linejoin="round"
            stroke-width="1.5"
            viewBox="0 0 24 24"
            width="16"
            style="width: 22px; height: 22px;"><path d="M16.88 3.549L7.12 20.451"></path></svg
          >
        </BreadcrumbSeparator>
      </BreadcrumbList>
    </Breadcrumb>
  </Fragment>
  <slot />
</AppLayout>
