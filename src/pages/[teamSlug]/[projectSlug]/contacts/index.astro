---
import ProjectLayout from '@/layouts/project/project-layout.astro'
import ProjectContactNav from '@/layouts/project/project-contact-nav.astro'

import { Badge } from '@/components/ui/badge'

import { ContactTable } from '@/components/contacts/contact-table'

import { getContactFields, batchContactResponse, buildContactConditions } from '@/db/models/contact'
import { NewContactForm } from '@/components/contacts/new-contact-form'
import { handleNumberInput } from '@/lib/utils'
import {
  DEFAULT_MAX_PAGE_SIZE,
  DEFAULT_PAGE_INDEX,
  DEFAULT_PAGE_SIZE,
  DEFAULT_PAGE_SIZES,
} from '@/constants'

const searchParams = Astro.url.searchParams

let pageSize = searchParams.get('pageSize') ?? `${DEFAULT_PAGE_SIZE}`
pageSize = DEFAULT_PAGE_SIZES.includes(Number.parseInt(pageSize))
  ? pageSize
  : `${DEFAULT_PAGE_SIZE}`
const limit = handleNumberInput(pageSize, { min: DEFAULT_PAGE_SIZE, max: DEFAULT_MAX_PAGE_SIZE })

const page = searchParams.get('page') ?? DEFAULT_PAGE_INDEX
const pageIndex = handleNumberInput(`${page}`, { min: 1 }) - 1
const pagination = {
  pageIndex,
  pageSize: limit,
}
const offset = pageIndex * limit

const csrfToken = Astro.locals.csrfToken!
const team = Astro.locals.team!
const project = Astro.locals.project!
const ids = {
  teamId: team.id,
  projectId: project.id,
}

const contactFields = getContactFields()
const { sortBy, whereConditions } = buildContactConditions({
  columnFilters: [],
  customColumnFilters: [],
})
const { contacts, customFields, contactsTotal } = await batchContactResponse({
  ...ids,
  contactsLimit: limit,
  contactsOffset: offset,
  contactsSortBy: sortBy,
  conditions: whereConditions,
})
---

<ProjectLayout>
  <div class="container space-y-6">
    <div class="flex items-center justify-between">
      <div class="inline-flex items-center space-x-2">
        <h2 class="text-2xl font-bold tracking-tight">Contacts</h2>
        <Badge className="mt-0.5">{contactsTotal}</Badge>
      </div>
      <NewContactForm customFields={customFields} csrfToken={csrfToken} teamId={team.id} projectId={project.id} client:load />
    </div>
    <ProjectContactNav active="contacts">
      <ContactTable
        ids={ids}
        csrfToken={csrfToken}
        total={contactsTotal}
        pagination={pagination}
        csrfToken={csrfToken}
        data={contacts}
        className="pt-6"
        customFields={customFields}
        contactFields={contactFields}
        client:load
      />
    </ProjectContactNav>
  </div>
</ProjectLayout>
