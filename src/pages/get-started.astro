---
import slug from 'slug'
import BaseLayout from '@/layouts/Base.astro'

import {
  Card,
  CardContent,
  CardDescription,
  CardFooter,
  CardHeader,
  CardTitle,
} from '@/components/ui/card'
import { Label } from '@/components/ui/label'
import { Input } from '@/components/ui/input'
import { Button } from '@/components/ui/button'
import { createProject } from '@/db/models/project'
import { createTeam } from '@/db/models/team'
import { anyTeamByUser } from '@/db/models/team'

interface FormProps {
  companyName: string
  projectName: string
  address: string
}

const user = Astro.locals.user!
if (await anyTeamByUser(user.id)) return Astro.redirect('/')

let csrfToken = Astro.locals.csrfToken
const errors: FormProps = { companyName: '', projectName: '', address: '' }

if (Astro.request.method === 'POST') {
  const data = Astro.locals.formDataParsed || new Map()
  let isValid: boolean = true
  csrfToken = data.get('csrf_token')

  const companyName = data.get('companyName')
  const projectName = data.get('projectName')
  const address = data.get('address')

  if (typeof companyName !== 'string' || companyName.length < 1) {
    isValid = false
    errors.companyName += 'Please enter an company name.'
  }
  if (typeof projectName !== 'string' || projectName.length < 1) {
    isValid = false
    errors.projectName += 'Please enter a project name.'
  }
  if (typeof address !== 'string' || address.length < 1) {
    isValid = false
    errors.address += 'Please enter an address.'
  }

  if (isValid) {
    const team = await createTeam({ name: companyName, slug: slug(companyName), userId: user.id })
    await createProject({
      name: projectName,
      slug: slug(projectName),
      userId: user.id,
      teamId: team.id,
    })

    return Astro.redirect('/')
  }
}
---

<BaseLayout>
  <form method="POST">
    <input type="hidden" name="csrf_token" value={csrfToken} />
    <Card className="mx-auto mt-8 max-w-xl">
      <CardHeader>
        <CardTitle>Let's set up your account</CardTitle>
        <CardDescription>
          You can always change this later in your account settings.
        </CardDescription>
      </CardHeader>
      <CardContent className="grid gap-8">
        <div class="grid gap-2">
          <Label>Company Name</Label>
          <Input type="text" name="companyName" placeholder="e.g., Acme Inc" />
          <p class="text-sm text-muted-foreground">Used in the footer of your emails.</p>
          {
            errors.companyName && (
              <p class="text-sm font-medium text-destructive">{errors.companyName}</p>
            )
          }
        </div>
        <div class="grid gap-2">
          <Label>Company Address</Label>
          <Input
            type="text"
            name="address"
            placeholder="e.g., 456 Oak Road, Unit 8, City, State, 12345"
          />
          <p class="text-sm text-muted-foreground">Enter the address of your company.</p>
          {errors.address && <p class="text-sm font-medium text-destructive">{errors.address}</p>}
        </div>
        <div class="grid gap-2">
          <Label>Project Name</Label>
          <Input type="text" name="projectName" placeholder="e.g., CRM Integration" />
          {
            errors.projectName && (
              <p class="text-sm font-medium text-destructive">{errors.projectName}</p>
            )
          }
        </div>
      </CardContent>
      <CardFooter>
        <Button type="submit">Continue</Button>
      </CardFooter>
    </Card>
  </form>
</BaseLayout>
