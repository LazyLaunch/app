---
import { actions, isInputError } from 'astro:actions'
import BaseLayout from '@/layouts/Base.astro'

import { CSRF_TOKEN } from '@/types'

import {
  Card,
  CardContent,
  CardDescription,
  CardFooter,
  CardHeader,
  CardTitle,
} from '@/components/ui/card'
import { Label } from '@/components/ui/label'
import { Input } from '@/components/ui/input'
import { Button } from '@/components/ui/button'
import { existsTeam } from '@/db/models/team'

const user = Astro.locals.user!
if (await existsTeam(user.id)) return Astro.redirect('/')

const csrfToken = Astro.locals.csrfToken

const result = Astro.getActionResult(actions.team.init)
const errors: Record<string, string> = {}
if (result && isInputError(result.error)) {
  const { fields } = result.error

  for (const key of Object.keys(fields)) {
    errors[key] = fields[key][0]
  }
}
---

<BaseLayout>
  <form method="POST" action={'/' + actions.team.init}>
    <input type="hidden" name={CSRF_TOKEN} value={csrfToken} />
    <Card className="mx-auto mt-8 max-w-xl">
      <CardHeader>
        <CardTitle>Let's set up your account</CardTitle>
        <CardDescription>
          You can always change this later in your account settings.
        </CardDescription>
      </CardHeader>
      <CardContent className="grid gap-8">
        <div class="grid gap-2">
          <Label>Company Name</Label>
          <Input type="text" name="companyName" placeholder="e.g., Acme Inc" />
          <p class="text-sm text-muted-foreground">Used in the footer of your emails.</p>
          {
            errors.companyName && (
              <p class="text-sm font-medium text-destructive">{errors.companyName}</p>
            )
          }
        </div>
        <div class="grid gap-2">
          <Label>Company Address</Label>
          <Input
            type="text"
            name="address"
            placeholder="e.g., 456 Oak Road, Unit 8, City, State, 12345"
          />
          <p class="text-sm text-muted-foreground">Enter the address of your company.</p>
          {errors.address && <p class="text-sm font-medium text-destructive">{errors.address}</p>}
        </div>
        <div class="grid gap-2">
          <Label>Project Name</Label>
          <Input type="text" name="projectName" placeholder="e.g., CRM Integration" />
          {
            errors.projectName && (
              <p class="text-sm font-medium text-destructive">{errors.projectName}</p>
            )
          }
        </div>
      </CardContent>
      <CardFooter>
        <Button type="submit">Continue</Button>
      </CardFooter>
    </Card>
  </form>
</BaseLayout>
